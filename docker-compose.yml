version: '3.7'

networks:
  cab-aggregator:
  elk:

services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'
    networks:
      - cab-aggregator

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - '9092'
      - '9093:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - cab-aggregator

  kafka-exporter:
    image: bitnami/kafka-exporter
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    environment:
      KAFKA_SERVER: kafka:9092
    networks:
      - cab-aggregator

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - cab-aggregator

  registry-service:
    image: registry-service
    container_name: registry-service
    build:
      context: ./registry-service
    ports:
      - "8761:8761"
    networks:
      - cab-aggregator

  gateway-service:
    image: gateway-service
    container_name: gateway-service
    build:
      context: ./gateway-service
    ports:
      - "8765:8765"
    networks:
      - cab-aggregator
    depends_on:
      - registry-service
    environment:
      REGISTRY_SERVICE_URI: http://registry-service:8761/eureka/

  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - cab-aggregator

  passenger-service:
    image: passenger-service
    container_name: passenger-service
    build:
      context: ./passenger-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - registry-service
      - kafka
    environment:
      KAFKA_URI: kafka:9092
      REGISTRY_SERVICE_URI: http://registry-service:8761/eureka/
      BANK_SERVICE_URI: http://bank-service:8083/bank
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/passenger_db
    networks:
      - cab-aggregator

  driver-service:
    image: driver-service
    container_name: driver-service
    build:
      context: ./driver-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - registry-service
      - kafka
    environment:
      KAFKA_URI: kafka:9092
      REGISTRY_SERVICE_URI: http://registry-service:8761/eureka/
      BANK_SERVICE_URI: http://bank-service:8083/bank
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/driver_db
    networks:
      - cab-aggregator

  rides-service:
    image: rides-service
    container_name: rides-service
    build:
      context: ./rides-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - registry-service
      - kafka
    environment:
      KAFKA_URI: kafka:9092
      REGISTRY_SERVICE_URI: http://registry-service:8761/eureka/
      BANK_SERVICE_URI: http://bank-service:8083/bank
      DRIVER_SERVICE_URI: http://driver-service:8081/driver
      PASSENGER_SERVICE_URI: http://passenger-service:8080/passenger
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ride_db
    networks:
      - cab-aggregator

  bank-service:
    image: bank-service
    container_name: bank-service
    build:
      context: ./bank-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - registry-service
      - kafka
    environment:
      REGISTRY_SERVICE_URI: http://registry-service:8761/eureka/
      DRIVER_SERVICE_URI: http://driver-service:8081/driver
      PASSENGER_SERVICE_URI: http://passenger-service:8080/passenger
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank_db
    networks:
      - cab-aggregator

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - cab-aggregator

  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    volumes:
      - ./config/grafana/dashboards:/etc/grafana/dashboards
      - ./config/grafana/datasources:/etc/grafana/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  postgres: